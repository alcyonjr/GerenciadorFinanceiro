// <auto-generated />
using System;
using Gerenciador_Financeiro.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gerenciador_Financeiro.Migrations
{
    [DbContext(typeof(GerenciadorFinanceiroContext))]
    [Migration("20190216095800_Conta-Index")]
    partial class ContaIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Conta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .HasMaxLength(150);

                    b.Property<long?>("ID_USUARIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.HasIndex("ID_USUARIO");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Despesa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataDespesa")
                        .HasColumnName("DATA_DESPESA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<long>("ID_CONTA");

                    b.HasKey("Id");

                    b.HasIndex("ID_CONTA");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Receita", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataReceita")
                        .HasColumnName("DATA_RECEITA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<long?>("ID_CONTA");

                    b.HasKey("Id");

                    b.HasIndex("ID_CONTA");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("Senha")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Conta", b =>
                {
                    b.HasOne("Gerenciador_Financeiro.Model.Usuario", "Usuario")
                        .WithMany("Contas")
                        .HasForeignKey("ID_USUARIO");
                });

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Despesa", b =>
                {
                    b.HasOne("Gerenciador_Financeiro.Model.Conta", "Conta")
                        .WithMany("Despesas")
                        .HasForeignKey("ID_CONTA")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gerenciador_Financeiro.Model.Receita", b =>
                {
                    b.HasOne("Gerenciador_Financeiro.Model.Conta", "Conta")
                        .WithMany("Receitas")
                        .HasForeignKey("ID_CONTA");
                });
#pragma warning restore 612, 618
        }
    }
}
